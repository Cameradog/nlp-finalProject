package binaive;

import java.util.HashMap;
import java.util.Set;

public class BiNaive {

    public static void main(String[] args) {
        String Sentiment = "";
        // TODO code application logic here
        String s = "abcbaadfdgdeiivnielo";//positive
        String s2;
        String s3 = "abcdefghijklmn";//negative
        String s4;
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();//positive unigram hashmap
        char c;
        for (int i = 0; i < s.length() - 1; i++) {
            c = s.charAt(i);
            if (map.get(c) == null) {
                map.put(c, 1);
            } else {
                Integer in = map.get(c);
                map.put(c, in.intValue() + 1);
            }
        }
        HashMap<Character, Integer> map3 = new HashMap<Character, Integer>();//negative unigram hashmap
        for (int i = 0; i < s3.length() - 1; i++) {
            c = s3.charAt(i);
            if (map3.get(c) == null) {
                map3.put(c, 1);
            } else {
                Integer in = map3.get(c);
                map3.put(c, in.intValue() + 1);
            }
            System.out.println(c+ " " +map3.get(c));
        }

        HashMap<String, Integer> map2 = new HashMap<String, Integer>();//positive bigram hashmap

        //char c;
        char[] charArray = s.toCharArray();
        for (int i = 0; i < charArray.length - 1; i++) {
            s2 = "";
            s2 += charArray[i];
            s2 += charArray[i + 1];
            if (map2.get(s2) == null) {
                map2.put(s2, 1);
            } else {
                Integer in = map2.get(s2);
                map2.put(s2, in.intValue() + 1);
            }
        }

        Set<String> set = map2.keySet();
        int count = 0;
        int V = 0;
        for (String ch : set) {
            System.out.println(ch + " " + map2.get(ch));
            count = count + map2.get(ch);
            V = V + 1;

        }
        //negative bigram hashmap
        HashMap<String, Integer> map4 = new HashMap<String, Integer>();//positive bigram hashmap

        //char c;
        char[] charArray2 = s3.toCharArray();
        for (int i = 0; i < charArray2.length - 1; i++) {
            s4 = "";
            s4 += charArray2[i];
            s4 += charArray2[i + 1];
            if (map4.get(s4) == null) {
                map4.put(s4, 1);
            } else {
                Integer in = map4.get(s4);
                map4.put(s4, in.intValue() + 1);
            }
        }

        Set<String> set2 = map4.keySet();
        int count2 = 0;
        int V2 = 0;
        for (String ch : set2) {
            System.out.println(ch + " " + map4.get(ch));
            count2 = count2 + map4.get(ch);
            V2 = V2 + 1;

        }

        double BiProb = 1;
        String test = "abc";
        double BiProb2 = 1;

        for (int i = 0; i < test.length() - 1; i++) {
            String str1 = String.valueOf(test.charAt(i));
            String str2 = String.valueOf(test.charAt(i + 1));
            if (map2.get(str1 + str2) != null) {
                BiProb = BiProb * (map2.get(str1 + str2) + 1) / (map.get(test.charAt(i)) + V);//Laplace smoothing add-1
            } else {
                BiProb = BiProb * 1 / (map.get(test.charAt(i)) + V);
            }
            if(map4.get(str1 + str2) != null){
                BiProb2 = BiProb2 * (map4.get(str1 + str2) + 1) / (map3.get(test.charAt(i)) + V2);
            }
            else
            BiProb2 = BiProb2 * 1 / (map3.get(test.charAt(i)) + V2);
        }
        //compare
        if (BiProb > BiProb2) {
            Sentiment = "Postive";
        } else {
            Sentiment = "Negative";
        }
        System.out.println(Sentiment);

    }
}
